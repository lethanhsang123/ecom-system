version: '3.7'

services:
#  order-datasource:
#    hostname: order-datasource
#    image: postgres
#    environment:
#      POSTGRES_USER: ${POSTGRES_USER:-admin}
#      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-admin}
#      PGDATA: /data/postgres
#    volumes:
#      - postgres:/data/postgres
#    ports:
#      - "5432:5432"
#    networks:
#      - ${GLOBAL_NETWORK:-kafka}
#    restart: unless-stopped
  order-service:
    container_name: order-service
    build:
      context: .
      dockerfile: Dockerfile
    image: order-container:latest
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://order-datasource:5432/postgres?currentSchema=order&binaryTransfer=true&reWriteBatchedInserts=true&stringtype=unspecified
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=admin
      - SPRING_PROFILE_ACTIVE=dev
      - PORT=8081
    restart: always
    ports:
      - "8081:8081"
    networks:
      - ${GLOBAL_NETWORK:-kafka}
#    depends_on:
#      - order-datasource
  payment-service:
    container_name: payment-service
    build:
      context: .
      dockerfile: Dockerfile
    image: payment-container:latest
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://order-datasource:5432/postgres?currentSchema=payment&binaryTransfer=true&reWriteBatchedInserts=true&stringtype=unspecified
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=admin
      - SPRING_PROFILE_ACTIVE=dev
      - PORT=8082
    restart: always
    ports:
      - "8082:8082"
    networks:
      - ${GLOBAL_NETWORK:-kafka}
#    depends_on:
#      - order-datasource
  restaurant-service:
    container_name: restaurant-service
    build:
      context: .
      dockerfile: Dockerfile
    image: restaurant-container:latest
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://order-datasource:5432/postgres?currentSchema=restaurant&binaryTransfer=true&reWriteBatchedInserts=true&stringtype=unspecified
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=admin
      - SPRING_PROFILE_ACTIVE=dev
      - PORT=8083
    restart: always
    ports:
      - "8083:8083"
    networks:
      - ${GLOBAL_NETWORK:-kafka}
volumes:
  postgres: